{"ast":null,"code":"var _jsxFileName = \"/home/alexandreuser/react-projects/github-api/src/components/repositories/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport useGithub from '../../hooks/github-hooks';\nimport RepositoryItem from '../repository-item';\nimport * as S from './styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Repositories = () => {\n  _s();\n\n  const {\n    githubState,\n    getUserRepos,\n    getUserReposStarred\n  } = useGithub();\n  const [hasUserForSearchRepos, setHasUserForSearchRepos] = useState();\n  const [hasUserForSearchStarred, setHasUserForSearchStarred] = useState();\n  useEffect(() => {\n    if (!!githubState.user.login) {\n      getUserRepos(githubState.user.login);\n    }\n\n    setHasUserForSearchRepos(!!githubState.repositories);\n    setHasUserForSearchStarred(!!githubState.starred);\n  }, [githubState.user]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: hasUserForSearchRepos ? /*#__PURE__*/_jsxDEV(S.WrapperTabs, {\n      selectedTabClassName: \"is-selected\",\n      selectedTabPanelClassName: \"is-selected\",\n      children: [/*#__PURE__*/_jsxDEV(S.WrapperTabList, {\n        children: [/*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Repositories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.WrapperTab, {\n          children: \"Starred\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: githubState.repositories.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n          name: item.name,\n          linkToRepo: item.html_url,\n          fullName: item.full_name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.WrapperTabPanel, {\n        children: githubState.starred.map(item => /*#__PURE__*/_jsxDEV(RepositoryItem, {\n          name: item.name,\n          linkToRepo: item.html_url,\n          fullName: item.full_name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n  }, void 0, false);\n};\n\n_s(Repositories, \"KvzQAi6+j6sT3D6+tktftCtWDl8=\", false, function () {\n  return [useGithub];\n});\n\n_c = Repositories;\nexport default Repositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Repositories\");","map":{"version":3,"names":["React","useEffect","useState","useGithub","RepositoryItem","S","Repositories","githubState","getUserRepos","getUserReposStarred","hasUserForSearchRepos","setHasUserForSearchRepos","hasUserForSearchStarred","setHasUserForSearchStarred","user","login","repositories","starred","map","item","name","html_url","full_name","id"],"sources":["/home/alexandreuser/react-projects/github-api/src/components/repositories/index.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport useGithub from '../../hooks/github-hooks';\nimport RepositoryItem from '../repository-item';\nimport * as S from './styled';\n\nconst Repositories = () => {\n  const { githubState, getUserRepos, getUserReposStarred } = useGithub();\n  const [ hasUserForSearchRepos, setHasUserForSearchRepos] = useState();\n  const [ hasUserForSearchStarred, setHasUserForSearchStarred] = useState();\n\n  useEffect(() => {\n    if(!!githubState.user.login){\n      getUserRepos(githubState.user.login);\n    }\n   setHasUserForSearchRepos(!!githubState.repositories);\n   setHasUserForSearchStarred(!!githubState.starred);\n  }, [githubState.user]);\n  \n\n  return (\n    <>\n      {hasUserForSearchRepos ? (\n      <S.WrapperTabs\n        selectedTabClassName=\"is-selected\"\n        selectedTabPanelClassName=\"is-selected\"\n      >\n        <S.WrapperTabList>\n          <S.WrapperTab>Repositories</S.WrapperTab>\n          <S.WrapperTab>Starred</S.WrapperTab>\n        </S.WrapperTabList>\n        <S.WrapperTabPanel>\n\n          {githubState.repositories.map((item) => (\n\n            <RepositoryItem \n            key={item.id}\n            name={item.name}\n            linkToRepo={item.html_url} \n            fullName = {item.full_name}\n            />\n\n          ))}\n        </S.WrapperTabPanel>\n        <S.WrapperTabPanel>\n\n        {githubState.starred.map((item) => (  \n\n          <RepositoryItem\n          key={item.id}\n          name={item.name}\n          linkToRepo={item.html_url} \n          fullName = {item.full_name}\n          />\n\n        ))}\n\n\n        </S.WrapperTabPanel>\n      </S.WrapperTabs>\n        ) :  (\n          <></>\n        ) }\n   </>\n  );\n};\n\nexport default Repositories;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB,MAAM;IAAEC,WAAF;IAAeC,YAAf;IAA6BC;EAA7B,IAAqDN,SAAS,EAApE;EACA,MAAM,CAAEO,qBAAF,EAAyBC,wBAAzB,IAAqDT,QAAQ,EAAnE;EACA,MAAM,CAAEU,uBAAF,EAA2BC,0BAA3B,IAAyDX,QAAQ,EAAvE;EAEAD,SAAS,CAAC,MAAM;IACd,IAAG,CAAC,CAACM,WAAW,CAACO,IAAZ,CAAiBC,KAAtB,EAA4B;MAC1BP,YAAY,CAACD,WAAW,CAACO,IAAZ,CAAiBC,KAAlB,CAAZ;IACD;;IACFJ,wBAAwB,CAAC,CAAC,CAACJ,WAAW,CAACS,YAAf,CAAxB;IACAH,0BAA0B,CAAC,CAAC,CAACN,WAAW,CAACU,OAAf,CAA1B;EACA,CANQ,EAMN,CAACV,WAAW,CAACO,IAAb,CANM,CAAT;EASA,oBACE;IAAA,UACGJ,qBAAqB,gBACtB,QAAC,CAAD,CAAG,WAAH;MACE,oBAAoB,EAAC,aADvB;MAEE,yBAAyB,EAAC,aAF5B;MAAA,wBAIE,QAAC,CAAD,CAAG,cAAH;QAAA,wBACE,QAAC,CAAD,CAAG,UAAH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE,QAAC,CAAD,CAAG,UAAH;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAJF,eAQE,QAAC,CAAD,CAAG,eAAH;QAAA,UAEGH,WAAW,CAACS,YAAZ,CAAyBE,GAAzB,CAA8BC,IAAD,iBAE5B,QAAC,cAAD;UAEA,IAAI,EAAEA,IAAI,CAACC,IAFX;UAGA,UAAU,EAAED,IAAI,CAACE,QAHjB;UAIA,QAAQ,EAAIF,IAAI,CAACG;QAJjB,GACKH,IAAI,CAACI,EADV;UAAA;UAAA;UAAA;QAAA,QAFD;MAFH;QAAA;QAAA;QAAA;MAAA,QARF,eAqBE,QAAC,CAAD,CAAG,eAAH;QAAA,UAEChB,WAAW,CAACU,OAAZ,CAAoBC,GAApB,CAAyBC,IAAD,iBAEvB,QAAC,cAAD;UAEA,IAAI,EAAEA,IAAI,CAACC,IAFX;UAGA,UAAU,EAAED,IAAI,CAACE,QAHjB;UAIA,QAAQ,EAAIF,IAAI,CAACG;QAJjB,GACKH,IAAI,CAACI,EADV;UAAA;UAAA;UAAA;QAAA,QAFD;MAFD;QAAA;QAAA;QAAA;MAAA,QArBF;IAAA;MAAA;MAAA;MAAA;IAAA,QADsB,gBAuClB;EAxCN,iBADF;AA6CD,CA3DD;;GAAMjB,Y;UACuDH,S;;;KADvDG,Y;AA6DN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}