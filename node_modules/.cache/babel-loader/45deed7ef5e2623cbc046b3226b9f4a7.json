{"ast":null,"code":"var _jsxFileName = \"/home/alexandreuser/react-projects/github-api/src/providers/github-provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, createContext, useCallback } from 'react';\nimport api from '../services/api';\nimport avatar from '../assets/img/git.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GithubContext = /*#__PURE__*/createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: []\n});\n\nconst GithubProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [githubState, setGithubState] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      login: undefined,\n      name: undefined,\n      avatar_url: avatar,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0\n    },\n    repositories: [],\n    starred: []\n  });\n  /** Função para buscar o usuário com suas informações */\n\n  const getUser = username => {\n    setGithubState(prevState => ({ ...prevState,\n      loading: !prevState.loading\n    }));\n    api.get(`users/${username}`).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      setGithubState(prevState => ({ ...prevState,\n        hasUser: true,\n        user: {\n          id: data.login,\n          login: data.login,\n          name: data.name,\n          avatar_url: data.avatar_url,\n          html_url: data.html_url,\n          blog: data.blog,\n          company: data.company,\n          location: data.location,\n          followers: data.followers,\n          following: data.following,\n          public_gists: data.public_gists,\n          public_repos: data.public_repos\n        }\n      }));\n    }).finally(() => {\n      setGithubState(prevState => ({ ...prevState,\n        loading: !prevState.loading\n      }));\n      alert(\"Usuário não encontrado!\");\n    });\n  };\n  /** Função para buscar os repositórios */\n\n\n  const getUserRepos = username => {\n    api.get(`users/${username}/repos`).then(_ref3 => {\n      let {\n        data\n      } = _ref3;\n      setGithubState(prevState => ({ ...prevState,\n        repositories: data\n      }));\n    });\n  };\n\n  const getUserReposStarred = username => {\n    api.get(`users/${username}/starred`).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      setGithubState(prevState => ({ ...prevState,\n        starred: data\n      }));\n    });\n  };\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback(username => getUser(username), []),\n    getUserRepos: useCallback(username => getUserRepos(username), []),\n    getUserReposStarred: useCallback(username => getUserReposStarred(username), [])\n  };\n  return /*#__PURE__*/_jsxDEV(GithubContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GithubProvider, \"/w9zDjFfKRY3Zwykd/DwwiDONlg=\");\n\n_c = GithubProvider;\nexport default GithubProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProvider\");","map":{"version":3,"names":["React","useState","createContext","useCallback","api","avatar","GithubContext","loading","user","repositories","starred","GithubProvider","children","githubState","setGithubState","hasUser","id","undefined","login","name","avatar_url","html_url","blog","company","location","followers","following","public_gists","public_repos","getUser","username","prevState","get","then","data","finally","alert","getUserRepos","getUserReposStarred","contextValue"],"sources":["/home/alexandreuser/react-projects/github-api/src/providers/github-provider.js"],"sourcesContent":["import React, { useState, createContext, useCallback } from 'react'\nimport api from '../services/api';\nimport avatar from '../assets/img/git.png';\n\nexport const GithubContext = createContext({\n  loading: false,\n  user: {},\n  repositories: [],\n  starred: [],\n})\n\nconst GithubProvider = ({children}) => {\n\n  const [ githubState, setGithubState ] = useState({\n    hasUser: false,\n    loading: false,\n    user: {\n      id: undefined,\n      login: undefined,\n      name: undefined,\n      avatar_url: avatar,\n      html_url: undefined,\n      blog: undefined,\n      company: undefined,\n      location: undefined,\n      followers: 0,\n      following: 0,\n      public_gists: 0,\n      public_repos: 0,\n    },\n    repositories: [],\n    starred: [],\n  });\n\n/** Função para buscar o usuário com suas informações */\n\nconst getUser = (username) => {\n  setGithubState((prevState) => ({\n    ...prevState,\n    loading: !prevState.loading,\n  }));\n\n  api\n  .get(`users/${username}`).then(({ data }) => {\n    setGithubState((prevState) => ({\n    ...prevState,\n    hasUser: true,\n    user: {\n      id: data.login,\n      login: data.login,\n      name: data.name,\n      avatar_url: data.avatar_url,\n      html_url: data.html_url,\n      blog: data.blog,\n      company: data.company,\n      location: data.location,\n      followers: data.followers,\n      following: data.following,\n      public_gists: data.public_gists,\n      public_repos: data.public_repos,\n    },\n    }));\n  })\n  .finally(() => {\n    setGithubState((prevState) => ({\n      ...prevState,\n      loading: !prevState.loading,\n    }))\n    alert(\"Usuário não encontrado!\");\n  });\n};\n\n/** Função para buscar os repositórios */\n\nconst getUserRepos = (username) => {\n  api.get(`users/${username}/repos`).then(({ data }) => {\n    setGithubState((prevState) => ({\n    ...prevState,\n    repositories: data,\n    }));\n  })\n};\n\nconst getUserReposStarred = (username) => {\n  api.get(`users/${username}/starred`).then(({ data }) => {\n    setGithubState((prevState) => ({\n    ...prevState,\n    starred: data,\n    }));\n  })\n};\n\n\n  const contextValue = {\n    githubState,\n    getUser: useCallback((username) => getUser(username), []),\n    getUserRepos: useCallback((username) => getUserRepos(username), []),\n    getUserReposStarred: useCallback((username) => getUserReposStarred(username), []),\n  }\n\n  return (\n    <GithubContext.Provider value={contextValue}>\n      {children}\n    </GithubContext.Provider>\n  )\n};\n\nexport default GithubProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module"}